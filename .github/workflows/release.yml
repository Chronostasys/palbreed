name: release
on:
  push:
    branches:
      - master
      - release/*
    paths:
    - '**.rs'
    - '**/Cargo.*'
    - '.github/workflows/release.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  artifacts:
    name: Artifacts
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "macOS-latest"
            dir: osx64
            arch: darwin-amd64
            artifacts: "palbreed"
            RUSTFLAGS: ""
          - os: "ubuntu-latest"
            dir: linux64
            artifacts: "palbreed"
            arch: linux-amd64
            RUSTFLAGS: ""
          - os: "windows-latest"
            dir: win64
            artifacts: "palbreed.exe"
            RUSTFLAGS: "-Dwarnings -Ctarget-feature=+crt-static"
            arch: windows-amd64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - uses: actions/cache@v3
        name: Cache Cargo
        if: ${{ matrix.config.os != 'self-hosted' && matrix.config.os != 'windows-latest' }}
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}


      - name: Cargo build
        env:
          RUSTFLAGS: ${{ matrix.config.RUSTFLAGS }}
        run: cargo build --release

      - run: mkdir -p ${{ matrix.config.dir }}

      - name: Move artifacts
        env:
          ARTIFACTS: ${{ matrix.config.artifacts }}
          OUT_DIR: ${{ matrix.config.dir }}
          OS: ${{ matrix.config.os }}
        run: |
          import os
          import shutil
          artifacts = os.environ['ARTIFACTS'].split()
          for artifact in artifacts:
            src = "target/release/%s" % artifact
            dst = os.environ['OUT_DIR'] + "/" + artifact
            shutil.copy(src, dst)
        shell: python


      - name: tar artifacts
        env:
          OUT_DIR: ${{ matrix.config.dir }}
          OS: ${{ matrix.config.os }}
        run: |
          import os
          src = os.environ['OUT_DIR']
          dst = "palbreed-0.1.${{ github.run_number }}-${{ matrix.config.arch }}.tar.gz"
          os.system("tar -czvf %s %s" % (dst, src))
        shell: python
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - uses: ncipollo/release-action@v1
        name: upload
        with:
          artifacts: "palbreed-0.1.${{ github.run_number }}-${{ matrix.config.arch }}.tar.gz"
          allowUpdates: true
          replacesArtifacts: false
          commit: master
          tag: v0.1.${{ github.run_number }}
